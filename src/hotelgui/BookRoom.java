/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

//here is the inheritances
package hotelgui;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aiden
 */
public class BookRoom extends javax.swing.JFrame {

    /**
     * Creates new form BookRoom
     */
    public BookRoom() {
        setTitle("Book Room");
        initComponents();
        setCustomIcon();
        btnChange.setVisible(false);
        cmbRoom.setEnabled(false);
        btnBook.setEnabled(false);
    }
    
    public void populateTable() {
    String[] columns = {"Name", "Identity Card/Passport", "Gender", "Phone Number", "Email", "Country", "Check In", "Check Out","Days of Stay", "Room ID", "Price"};
    DefaultTableModel model = new DefaultTableModel(columns, 0);
    

    jTable1.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpGender = new javax.swing.ButtonGroup();
        btnBack = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFullname = new javax.swing.JTextField();
        txtIdentity = new javax.swing.JTextField();
        radMale = new javax.swing.JRadioButton();
        radFemale = new javax.swing.JRadioButton();
        txtPhone = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbDate1 = new javax.swing.JComboBox<>();
        cmbYear1 = new javax.swing.JComboBox<>();
        cmbMonth1 = new javax.swing.JComboBox<>();
        btnBook = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbRoom = new javax.swing.JComboBox<>();
        btnChange = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnConfirm = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cmbDate2 = new javax.swing.JComboBox<>();
        cmbMonth2 = new javax.swing.JComboBox<>();
        cmbYear2 = new javax.swing.JComboBox<>();
        btnCheck = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setMinimumSize(new java.awt.Dimension(950, 600));
        setPreferredSize(new java.awt.Dimension(920, 545));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 111, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setText("Fullname : ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 118, 70, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Identity Card/Passport :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 180, 150, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Gender :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 60, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setText("Phone Number :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 110, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel5.setText("Country :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(676, 180, 70, -1));

        txtFullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtFullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 140, 172, -1));

        txtIdentity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdentityActionPerformed(evt);
            }
        });
        getContentPane().add(txtIdentity, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 208, 172, -1));

        grpGender.add(radMale);
        radMale.setText("Male");
        getContentPane().add(radMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 98, -1));

        grpGender.add(radFemale);
        radFemale.setText("Female");
        getContentPane().add(radFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 98, -1));

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneKeyTyped(evt);
            }
        });
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 173, -1));
        getContentPane().add(txtCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(676, 208, 173, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel8.setText("Check-In Date :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 100, -1));

        cmbDate1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Date-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(cmbDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 292, -1, -1));

        cmbYear1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        getContentPane().add(cmbYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 292, -1, -1));

        cmbMonth1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Month-", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        getContentPane().add(cmbMonth1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 292, -1, -1));

        btnBook.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });
        getContentPane().add(btnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 510, 140, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setText("Book Room");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 41, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel7.setText("Email :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(676, 118, 50, -1));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(676, 140, 173, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel10.setText("Available Room Selection :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 170, -1));

        cmbRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-", "A01", "A02", "A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08", "B09", "B10" }));
        cmbRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRoomActionPerformed(evt);
            }
        });
        getContentPane().add(cmbRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 173, -1));

        btnChange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChange.setText("Change Date");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });
        getContentPane().add(btnChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 290, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Identity/Passport", "Gender", "Phone Number", "Email", "Country", "Check In", "Check Out", "Days of Stay", "Room ID", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 810, 70));

        btnConfirm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 510, 130, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 830, 90));

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel9.setText("Check-Out Date :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 110, -1));

        cmbDate2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Date-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jPanel1.add(cmbDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 182, -1, -1));

        cmbMonth2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Month-", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        jPanel1.add(cmbMonth2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 182, -1, -1));

        cmbYear2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        jPanel1.add(cmbYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 182, -1, -1));

        btnCheck.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCheck.setText("Check Room");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });
        jPanel1.add(btnCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 180, -1, -1));

        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("*Price for a room will be RM350 per night");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 270, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 910, 440));

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        MainMenu a =new MainMenu();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        String n, i , g=null, pn, e, c, dt1, mt1, yr1, cid, dt2, mt2, yr2, cod, r;
        int p;
        
        n=txtFullname.getText().replaceAll("\\s","");
        
        i=txtIdentity.getText();
        
        if(radMale.isSelected())
            g=radMale.getText(); //g="Male";
        else if(radFemale.isSelected())
            g=radFemale.getText(); //g="Female";
        
        pn=txtPhone.getText();
        
        e=txtEmail.getText();
        
        c=txtCountry.getText();
        
        dt1=String.valueOf(cmbDate1.getSelectedItem());
        mt1=String.valueOf(cmbMonth1.getSelectedItem());
        yr1=String.valueOf(cmbYear1.getSelectedItem());
        cid=dt1+"/"+mt1+"/"+yr1;
        
        dt2=String.valueOf(cmbDate2.getSelectedItem());
        mt2=String.valueOf(cmbMonth2.getSelectedItem());
        yr2=String.valueOf(cmbYear2.getSelectedItem());
        cod=dt2+"/"+mt2+"/"+yr2;
        
        r=String.valueOf(cmbRoom.getSelectedItem());
        
        p=350;
        
        AddCustomer obj1 = new AddCustomer(n,i,g,pn,e,c,cid,cod,r,p);
        String res=obj1.writeRecord();
        if(res== "Success"){
            JOptionPane.showMessageDialog(null,"The Room Successfully Booked","Success",JOptionPane.INFORMATION_MESSAGE);
            auditLog log = new auditLog();
            log.auditLog("Customer "+ n + " has booked Room "+r);
            cmbRoom.setSelectedIndex(0);
            cmbRoom.setEnabled(false);
        }else{            
            JOptionPane.showMessageDialog(null, "Failed to Book Room","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBookActionPerformed

    private void txtPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyTyped
        //for disable character input
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneKeyTyped

    private void cmbRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRoomActionPerformed
        
    }//GEN-LAST:event_cmbRoomActionPerformed
    
    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        //interactions with the combo box is hard to create a class for it to reuse
        String checkInDate = cmbDate1.getSelectedItem().toString() + "/" + cmbMonth1.getSelectedItem().toString() + "/" + cmbYear1.getSelectedItem().toString();
        String checkOutDate = cmbDate2.getSelectedItem().toString() + "/" + cmbMonth2.getSelectedItem().toString() + "/" + cmbYear2.getSelectedItem().toString();
        Object room = null;
        
        if (cmbDate1.getSelectedItem().equals("-Date-") || cmbMonth1.getSelectedItem().equals("-Month-") ||
            cmbDate2.getSelectedItem().equals("-Date-") || cmbMonth2.getSelectedItem().equals("-Month-")) {
            JOptionPane.showMessageDialog(null, "Please select valid dates!","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        //validate month check in date
        int year = Integer.parseInt(cmbYear1.getSelectedItem().toString());
        boolean isLeapYear = (year % 4 == 0) && (year % 100 != 0 || year % 400 == 0);
        int maxDays = 31;
        switch (cmbMonth1.getSelectedItem().toString()) {
            //if true then 29, false then 28
            case "Feb" -> maxDays = isLeapYear ? 29 : 28;
            case "Apr", "Jun", "Sep", "Nov" -> maxDays = 30;
            default -> {
            }
        }

        int day = Integer.parseInt(cmbDate1.getSelectedItem().toString());
        //if true then the error code will pop up, if false will proceed without the return
        if (day > maxDays) {
            JOptionPane.showMessageDialog(null, "Invalid date! Please choose again for the selected month","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //validate month check out date
        int year2 = Integer.parseInt(cmbYear2.getSelectedItem().toString());
        boolean isLeapYear2 = (year2 % 4 == 0) && (year2 % 100 != 0 || year2 % 400 == 0);
        int maxDays2 = 31;
        switch (cmbMonth2.getSelectedItem().toString()) {
            //if true then 29, false then 28
            case "Feb" -> maxDays2 = isLeapYear2 ? 29 : 28;
            case "Apr", "Jun", "Sep", "Nov" -> maxDays2 = 30;
            default -> {
            }
        }

        int day2 = Integer.parseInt(cmbDate2.getSelectedItem().toString());
        if (day2 > maxDays2) {
            //if the selected day is 31 and the maxDays is 28
            JOptionPane.showMessageDialog(null, "Invalid date! Please choose again for the selected month","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        DateTimeFormatter Formatter = DateTimeFormatter.ofPattern("dd/MMM/yyyy"); //parse date using the format
        LocalDate checkIn = LocalDate.parse(checkInDate, Formatter);
        LocalDate checkOut = LocalDate.parse(checkOutDate, Formatter);
        if(checkOut.isBefore(checkIn)){
            JOptionPane.showMessageDialog(null, "The Check-out date cannot set before the Check-in date","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }else if(checkOut.isEqual(checkIn)){
            JOptionPane.showMessageDialog(null, "The Check-out date cannot same as the Check-in date","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        try{ //use to check the date between the selected date 
            
            //big dynamic size of array for long date list
            List<String> datesBetween = new ArrayList<>();
            //check in date+1, if the date is still before the check out date, write into array then date+1 loop
            for (LocalDate date = checkIn.plusDays(1); date.isBefore(checkOut); date = date.plusDays(1)){
                String date1 = date.format(Formatter);
                datesBetween.add(date1);
            }
            
            File details = new File("bookingDetails.txt");
            Scanner scanner = new Scanner(details);
            while (scanner.hasNextLine()){
                String info = scanner.nextLine();
                String[] bookingDetails = info.split(", ");
                
                //use to check the date between the booked date
                LocalDate bookedCheckIn = LocalDate.parse(bookingDetails[6], Formatter);
                LocalDate bookedCheckOut = LocalDate.parse(bookingDetails[7], Formatter);
                for (LocalDate date = bookedCheckIn; date.isBefore(bookedCheckOut); date = date.plusDays(1)){
                String date2 = date.format(Formatter);
                
                //if the new customer select the date which clashed with other booked customer, then remove that room
                if (bookingDetails[6].equals(checkInDate) || bookingDetails[7].equals(checkOutDate) || checkInDate.contains(date2)|| checkOutDate.contains(date2)
                        || datesBetween.contains(date2)){
                    cmbRoom.removeItem(bookingDetails[8]);
                    if (cmbRoom.getItemCount() == 1){
                        JOptionPane.showMessageDialog(null, "Rooms are fully booked for the selected dates.", "No rooms available", JOptionPane.WARNING_MESSAGE);
                    break;
                    }
                }
                }
            }scanner.close();
        }catch (FileNotFoundException e){
            //can know which line has the error code if got error
            e.printStackTrace();
        }btnChange.setVisible(true);
        cmbDate1.setEnabled(false);
        cmbMonth1.setEnabled(false);
        cmbYear1.setEnabled(false);
        cmbDate2.setEnabled(false);
        cmbMonth2.setEnabled(false);
        cmbYear2.setEnabled(false);
        cmbRoom.setEnabled(true);
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
    try {
        // Open the text file
        File file = new File("roomDetails.txt");
        Scanner scanner = new Scanner(file);
        
        // remove all the current combo box model
        int itemCount = cmbRoom.getItemCount();
        for (int i =1;i<itemCount;i++){
        cmbRoom.removeItemAt(1); // remove everything except the -Select-
        }
        // fetch each line data from the file and add it to the cmbRoom model
        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            cmbRoom.addItem(line);
        }

        // Close the scanner
        scanner.close();

    } catch (FileNotFoundException e) {
        e.printStackTrace();
    }btnChange.setVisible(false);
    cmbDate1.setEnabled(true);
    cmbMonth1.setEnabled(true);
    cmbYear1.setEnabled(true);
    cmbDate2.setEnabled(true);
    cmbMonth2.setEnabled(true);
    cmbYear2.setEnabled(true);
    cmbRoom.setEnabled(false);
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        String n, i , g=null, pn, e, c, dt1, mt1, yr1, cid, dt2, mt2, yr2, cod, r;
        int p;
        
        //name
        n=txtFullname.getText();
        
        //phone
        pn=txtPhone.getText();
        
        //email
        e=txtEmail.getText();
        
        //ic/passport
        i=txtIdentity.getText();
        
        //gender
        if(radMale.isSelected()){
            g=radMale.getText(); //g="Male";
        }else if(radFemale.isSelected()){
            g=radFemale.getText(); //g="Female";
        }else{
            JOptionPane.showMessageDialog(null,"Please choose Customer Gender!","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        //country
        c=txtCountry.getText();
        
        if(validation.validateName(n) && validation.validatePhone(pn) && validation.validateEmail(e) 
                && validation.validateIdentity(i) && validation.validateCountry(c)) {
        
        //check in date
        dt1=String.valueOf(cmbDate1.getSelectedItem());
        mt1=String.valueOf(cmbMonth1.getSelectedItem());
        yr1=String.valueOf(cmbYear1.getSelectedItem());
        cid=dt1+"/"+mt1+"/"+yr1;
        //check out date
        dt2=String.valueOf(cmbDate2.getSelectedItem());
        mt2=String.valueOf(cmbMonth2.getSelectedItem());
        yr2=String.valueOf(cmbYear2.getSelectedItem());
        cod=dt2+"/"+mt2+"/"+yr2;
        
        //room
        r=String.valueOf(cmbRoom.getSelectedItem());
        if(r.equals("-Select-")){
            JOptionPane.showMessageDialog(null, "Please select a room", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //days between counter
        LocalDate checkIn = LocalDate.parse(cid, DateTimeFormatter.ofPattern("dd/MMM/yyyy"));
        LocalDate checkOut = LocalDate.parse(cod, DateTimeFormatter.ofPattern("dd/MMM/yyyy"));
        long totalDay = ChronoUnit.DAYS.between(checkIn, checkOut);
        
        p=350;
        
            //if any data already existed in the table, remove it
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if (model.getRowCount() > 0) {
            model.setRowCount(0);
        }

        Object[] row = new Object[11];
        row[0] = n;
        row[1] = i;
        row[2] = g;
        row[3] = pn;
        row[4] = e;
        row[5] = c;
        row[6] = cid;
        row[7] = cod;
        row[8] = totalDay;
        row[9] = r;
        row[10] = p;
        model.addRow(row);
        
        btnBook.setEnabled(true);
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtIdentityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdentityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdentityActionPerformed

    private void txtFullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullnameActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookRoom().setVisible(true);
            }
        });
    }
    
    private void setCustomIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("hotelLogo3.0.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JComboBox<String> cmbDate1;
    private javax.swing.JComboBox<String> cmbDate2;
    private javax.swing.JComboBox<String> cmbMonth1;
    private javax.swing.JComboBox<String> cmbMonth2;
    private javax.swing.JComboBox<String> cmbRoom;
    private javax.swing.JComboBox<String> cmbYear1;
    private javax.swing.JComboBox<String> cmbYear2;
    private javax.swing.ButtonGroup grpGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton radFemale;
    private javax.swing.JRadioButton radMale;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFullname;
    private javax.swing.JTextField txtIdentity;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
