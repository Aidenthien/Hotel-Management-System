/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelgui;

import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aiden
 */
public class ModifyDetails extends javax.swing.JFrame {

    /**
     * Creates new form ModifyDetails
     */
    public ModifyDetails() {
        setTitle("Modify Details");
        initComponents();
        setCustomIcon();
        txtEmail.setEnabled(false);
        txtCountry.setEnabled(false);
        txtEmail.setEnabled(false);
        cmbDate1.setEnabled(false);
        cmbMonth1.setEnabled(false);
        cmbYear1.setEnabled(false);
        cmbDate2.setEnabled(false);
        cmbMonth2.setEnabled(false);
        cmbYear2.setEnabled(false);
        cmbRoom.setEnabled(false);
        btnChange.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnVerify = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnModify = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmbDate1 = new javax.swing.JComboBox<>();
        cmbMonth1 = new javax.swing.JComboBox<>();
        cmbYear1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cmbDate2 = new javax.swing.JComboBox<>();
        cmbMonth2 = new javax.swing.JComboBox<>();
        cmbYear2 = new javax.swing.JComboBox<>();
        cmbRoom = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cmbCheck = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnChange = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtBookedRoom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setText("Customer Name :");

        btnVerify.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVerify.setText("Verify");
        btnVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Country :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Phone Number :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setText("Email :");

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        txtCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnModify.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel5.setText("Check In Date :");

        cmbDate1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cmbDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDate1ActionPerformed(evt);
            }
        });

        cmbMonth1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        cmbYear1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel6.setText("Check Out Date :");

        cmbDate2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbMonth2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        cmbMonth2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonth2ActionPerformed(evt);
            }
        });

        cmbYear2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        cmbRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Maintain", "A01", "A02", "A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08", "B09", "B10" }));
        cmbRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRoomActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel10.setText("Available Room Selection :");

        cmbCheck.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmbCheck.setText("Check Room");
        cmbCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCheckActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("*No spaces when entering name");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone Number", "Email", "Country", "Check In", "Check Out", "Room ID"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnChange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChange.setText("Change Date");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setText("Modify Booking Details");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel8.setText("Booked Room :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(cmbMonth1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(cmbYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnVerify)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmbDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)
                                .addComponent(cmbYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(cmbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtPhone)
                                    .addComponent(txtEmail)
                                    .addComponent(txtCountry, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(txtBookedRoom))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)))))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel7)))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtBookedRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerify))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5))
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCheck)
                            .addComponent(cmbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnChange)
                        .addGap(56, 56, 56)
                        .addComponent(btnModify)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 960, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        ManageRoom a =new ManageRoom();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed
    
    private void btnVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyActionPerformed
        String customerName = txtName.getText().toLowerCase();
        String customerPhone = txtPhone.getText();
        String customerRoom = txtBookedRoom.getText();
        boolean isExistOrNot = false;
        
        try{
            File details = new File("bookingDetails.txt");
            Scanner scanner = new Scanner(details);
            while (scanner.hasNextLine()){
                String info = scanner.nextLine();
                String[] bookingDetails = info.split(", ");
                if (bookingDetails[0].toLowerCase().equals(customerName) && bookingDetails[3].equals(customerPhone)
                        && bookingDetails[8].equals(customerRoom)){
                    isExistOrNot = true;
                    txtName.setEnabled(false);
                    txtPhone.setEnabled(false);
                    txtBookedRoom.setEnabled(false);
                    txtEmail.setEnabled(true);
                    txtCountry.setEnabled(true);
                    txtEmail.setEnabled(true);
                    cmbDate1.setEnabled(true);
                    cmbMonth1.setEnabled(true);
                    cmbYear1.setEnabled(true);
                    cmbDate2.setEnabled(true);
                    cmbMonth2.setEnabled(true);
                    cmbYear2.setEnabled(true);
                    txtEmail.setText(bookingDetails[4]);
                    txtCountry.setText(bookingDetails[5]);
                    String[] checkInDetails = bookingDetails[6].split("/");
                    String[] checkOutDetails = bookingDetails[7].split("/");
                    cmbDate1.setSelectedItem(checkInDetails[0]);
                    cmbMonth1.setSelectedItem(checkInDetails[1]);
                    cmbYear1.setSelectedItem(checkInDetails[2]);
                    cmbDate2.setSelectedItem(checkOutDetails[0]);
                    cmbMonth2.setSelectedItem(checkOutDetails[1]);
                    cmbYear2.setSelectedItem(checkOutDetails[2]);
                    
                    break;
                }
            }scanner.close();
        }catch (FileNotFoundException e){
            //can know which line has the error code if got error
            e.printStackTrace();
        }  
            
        if (!isExistOrNot){
            JOptionPane.showMessageDialog(null, "Data not exist!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnVerifyActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryActionPerformed
        
    }//GEN-LAST:event_txtCountryActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        String checkIn = cmbDate1.getSelectedItem().toString() + "/" + cmbMonth1.getSelectedItem().toString() + "/" + cmbYear1.getSelectedItem().toString();
        String checkOut = cmbDate2.getSelectedItem().toString() + "/" + cmbMonth2.getSelectedItem().toString() + "/" + cmbYear2.getSelectedItem().toString();
        String room = String.valueOf(cmbRoom.getSelectedItem());
        boolean success = false;
        String n, pn, e, c, dt1, mt1, yr1, cid, dt2, mt2, yr2, cod, r;
        
        //validation
        e=txtEmail.getText();
        c=txtCountry.getText();
        if(validation.validateEmail(e) && validation.validateCountry(c)) {
        
        if (!room.equals("Maintain")){
            //modify with change room
        Modify modify = new Modify("bookingDetails.txt");
        success = modify.modifyDetails(txtName.getText(), txtPhone.getText(), txtBookedRoom.getText(), txtEmail.getText(), txtCountry.getText(), checkIn, checkOut, room);
        }else{
            //modify without change room
            Modify modify = new Modify("bookingDetails.txt");
            success = modify.modifyDetails(txtName.getText(), txtPhone.getText(), txtBookedRoom.getText(), txtEmail.getText(), txtCountry.getText(), checkIn, checkOut);
        }
        if (success) {
            JOptionPane.showMessageDialog(null, "Details Modified Successfully");
            
            //name
            n=txtName.getText();
            
            //phone
            pn=txtPhone.getText();
            
            //email
            e=txtEmail.getText();
            
            //country
            c=txtCountry.getText();

            dt1=String.valueOf(cmbDate1.getSelectedItem());
            mt1=String.valueOf(cmbMonth1.getSelectedItem());
            yr1=String.valueOf(cmbYear1.getSelectedItem());
            cid=dt1+"/"+mt1+"/"+yr1;

            dt2=String.valueOf(cmbDate2.getSelectedItem());
            mt2=String.valueOf(cmbMonth2.getSelectedItem());
            yr2=String.valueOf(cmbYear2.getSelectedItem());
            cod=dt2+"/"+mt2+"/"+yr2;

            r=String.valueOf(cmbRoom.getSelectedItem());
            
            Object[] row = new Object [] {n, pn, e, c, cid, cod, r};
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.insertRow(0, row);
            
            txtName.setText("");
            txtPhone.setText("");
            txtBookedRoom.setText("");
            txtEmail.setText("");
            txtCountry.setText("");
            cmbDate1.setSelectedIndex(0);
            cmbMonth1.setSelectedIndex(0);
            cmbYear1.setSelectedIndex(0);
            cmbDate2.setSelectedIndex(0);
            cmbMonth2.setSelectedIndex(0);
            cmbYear2.setSelectedIndex(0);
            cmbRoom.setSelectedIndex(0);
            txtName.setEnabled(true);
            txtPhone.setEnabled(true);
            txtBookedRoom.setEnabled(true);
            txtEmail.setEnabled(false);
            txtCountry.setEnabled(false);
            txtEmail.setEnabled(false);
            cmbDate1.setEnabled(false);
            cmbMonth1.setEnabled(false);
            cmbYear1.setEnabled(false);
            cmbDate2.setEnabled(false);
            cmbMonth2.setEnabled(false);
            cmbYear2.setEnabled(false);
            cmbRoom.setEnabled(false);
            auditLog log = new auditLog();
            log.auditLog("Customer "+ n + "'s detail has been updated ");
            
        } else {
            JOptionPane.showMessageDialog(null, "Details Modified Unsuccessfully", "Error", JOptionPane.ERROR_MESSAGE);
        }
            }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void cmbCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCheckActionPerformed
        //interactions with the combo box is hard to create a class for it to reuse
        String checkInDate = cmbDate1.getSelectedItem().toString() + "/" + cmbMonth1.getSelectedItem().toString() + "/" + cmbYear1.getSelectedItem().toString();
        String checkOutDate = cmbDate2.getSelectedItem().toString() + "/" + cmbMonth2.getSelectedItem().toString() + "/" + cmbYear2.getSelectedItem().toString();
        Object room = null;
        
        //validate month check in date
        int year = Integer.parseInt(cmbYear1.getSelectedItem().toString());
        boolean isLeapYear = (year % 4 == 0) && (year % 100 != 0 || year % 400 == 0);
        int maxDays = 31;
        switch (cmbMonth1.getSelectedItem().toString()) {
            //if true then 29, false then 28
            case "Feb" -> maxDays = isLeapYear ? 29 : 28;
            case "Apr", "Jun", "Sep", "Nov" -> maxDays = 30;
            default -> {
            }
        }

        int day = Integer.parseInt(cmbDate1.getSelectedItem().toString());
        if (day > maxDays) {
            JOptionPane.showMessageDialog(null, "Invalid date! Please choose again for the selected month","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //validate month check out date
        int year2 = Integer.parseInt(cmbYear2.getSelectedItem().toString());
        boolean isLeapYear2 = (year2 % 4 == 0) && (year2 % 100 != 0 || year2 % 400 == 0);
        int maxDays2 = 31;
        switch (cmbMonth2.getSelectedItem().toString()) {
            //if true then 29, false then 28
            case "Feb" -> maxDays2 = isLeapYear2 ? 29 : 28;
            case "Apr", "Jun", "Sep", "Nov" -> maxDays2 = 30;
            default -> {
            }
        }

        int day2 = Integer.parseInt(cmbDate2.getSelectedItem().toString());
        if (day2 > maxDays2) {
            JOptionPane.showMessageDialog(null, "Invalid date! Please choose again for the selected month","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        DateTimeFormatter Formatter = DateTimeFormatter.ofPattern("dd/MMM/yyyy"); //parse date using the format
        LocalDate checkIn = LocalDate.parse(checkInDate, Formatter);
        LocalDate checkOut = LocalDate.parse(checkOutDate, Formatter);
        if(checkOut.isBefore(checkIn)){
            JOptionPane.showMessageDialog(null, "The Check-out date cannot set before the Check-in date","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }else if(checkOut.isEqual(checkIn)){
            JOptionPane.showMessageDialog(null, "The Check-out date cannot same as the Check-in date","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        try{ //use to check the date between the selected date 
            
            //big dynamic size of array for long date list
            List<String> datesBetween = new ArrayList<>();
            //check in date+1, if the date is still before the check out date, write into array then date+1 loop
            for (LocalDate date = checkIn.plusDays(1); date.isBefore(checkOut); date = date.plusDays(1)){
                String date1 = date.format(Formatter);
                datesBetween.add(date1);
            }
            
            File details = new File("bookingDetails.txt");
            Scanner scanner = new Scanner(details);
            while (scanner.hasNextLine()){
                String info = scanner.nextLine();
                String[] bookingDetails = info.split(", ");
                
                //use to check the date between the booked date
                LocalDate bookedCheckIn = LocalDate.parse(bookingDetails[6], Formatter);
                LocalDate bookedCheckOut = LocalDate.parse(bookingDetails[7], Formatter);
                for (LocalDate date = bookedCheckIn; date.isBefore(bookedCheckOut); date = date.plusDays(1)){
                String date2 = date.format(Formatter);
                
                //if the new customer select the date which clashed with other booked customer, then remove that room
                if (bookingDetails[6].equals(checkInDate) || bookingDetails[7].equals(checkOutDate) || checkInDate.contains(date2)|| checkOutDate.contains(date2)
                        || datesBetween.contains(date2)){
                    cmbRoom.removeItem(bookingDetails[8]);
                    if (cmbRoom.getItemCount() == 1){
                        JOptionPane.showMessageDialog(null, "Rooms are fully booked for the selected dates.", "No rooms available", JOptionPane.WARNING_MESSAGE);
                    break;
                    }
                }
                }
            }scanner.close();
        }catch (FileNotFoundException e){
            //can know which line has the error code if got error
            e.printStackTrace();
        }btnChange.setVisible(true);
        cmbDate1.setEnabled(false);
        cmbMonth1.setEnabled(false);
        cmbYear1.setEnabled(false);
        cmbDate2.setEnabled(false);
        cmbMonth2.setEnabled(false);
        cmbYear2.setEnabled(false);
        cmbRoom.setEnabled(true);
    }//GEN-LAST:event_cmbCheckActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        //for the refreshing room id from the text file
        //cannot open a class and recall it because on absolute layout and cmbRoom i have to add through the component causing it error
        //tried multiways but still unable to create a class for it
        try {
        // Open the text file
        File file = new File("roomDetails.txt");
        Scanner scanner = new Scanner(file);
        
        // Clear the current combo box model
        int itemCount = cmbRoom.getItemCount();
        for (int i =1;i<itemCount;i++){
        cmbRoom.removeItemAt(1);
        }
        // Read each line from the file and add it to the cmbRoom model
        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            cmbRoom.addItem(line);
        }

        // Close the scanner
        scanner.close();

    } catch (FileNotFoundException e) {
        e.printStackTrace();
    }btnChange.setVisible(false);
    cmbDate1.setEnabled(true);
    cmbMonth1.setEnabled(true);
    cmbYear1.setEnabled(true);
    cmbDate2.setEnabled(true);
    cmbMonth2.setEnabled(true);
    cmbYear2.setEnabled(true);
    cmbRoom.setEnabled(false);
    }//GEN-LAST:event_btnChangeActionPerformed

    private void cmbRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRoomActionPerformed

    }//GEN-LAST:event_cmbRoomActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed

    }//GEN-LAST:event_txtEmailActionPerformed

    private void cmbMonth2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonth2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonth2ActionPerformed

    private void cmbDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDate1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyDetails().setVisible(true);
            }
        });
    }
    
    private void setCustomIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("hotelLogo3.0.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnVerify;
    private javax.swing.JButton cmbCheck;
    private javax.swing.JComboBox<String> cmbDate1;
    private javax.swing.JComboBox<String> cmbDate2;
    private javax.swing.JComboBox<String> cmbMonth1;
    private javax.swing.JComboBox<String> cmbMonth2;
    private javax.swing.JComboBox<String> cmbRoom;
    private javax.swing.JComboBox<String> cmbYear1;
    private javax.swing.JComboBox<String> cmbYear2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBookedRoom;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
